#!/usr/bin/env swift

import Foundation
import Dispatch

guard CommandLine.arguments.count == 3 else {
    print("Usage: ./add <url> <name>")
    exit(1)
}

struct RegistryFile: Codable {
    struct Entry: Codable {
        let name: String
        let url: String
        let description: String?
    }
    
    public var entries: [Entry]
}

let decoder = JSONDecoder()
let encoder = JSONEncoder()
encoder.outputFormatting = .prettyPrinted

var letter = CommandLine.arguments[2].uppercased()
letter = String(letter[letter.startIndex])
let url = URL(fileURLWithPath: "Registry/\(letter).json")

let data = try! Data(contentsOf: url)
var file = try! decoder.decode(RegistryFile.self, from: data)
let existing = Set(file.entries.map { $0.name })

guard !existing.contains(CommandLine.arguments[2]) else {
    print("Error: \(CommandLine.arguments[2]) already exists in the registry")
    exit(1)
}

print("Enter description (empty for none):")
var description = readLine()
if let d = description, d.isEmpty {
    description = nil
}

file.entries.append(.init(name: CommandLine.arguments[2], url: CommandLine.arguments[1], description: description))
try! encoder.encode(file).write(to: url)
